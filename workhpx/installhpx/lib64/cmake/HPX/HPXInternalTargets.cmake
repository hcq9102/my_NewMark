# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.21)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget HPXInternal::hpx_private_flags HPXInternal::hpx_public_flags HPXInternal::hpx_full HPXInternal::hpx_interface HPXInternal::hpx_interface_wrap_main HPXInternal::hpx_core HPXInternal::hpx_affinity HPXInternal::hpx_algorithms HPXInternal::hpx_allocator_support HPXInternal::hpx_asio HPXInternal::hpx_assertion HPXInternal::hpx_async_base HPXInternal::hpx_async_combinators HPXInternal::hpx_async_local HPXInternal::hpx_batch_environments HPXInternal::hpx_cache HPXInternal::hpx_command_line_handling_local HPXInternal::hpx_compute_local HPXInternal::hpx_concepts HPXInternal::hpx_concurrency HPXInternal::hpx_config HPXInternal::hpx_config_registry HPXInternal::hpx_coroutines HPXInternal::hpx_datastructures HPXInternal::hpx_debugging HPXInternal::hpx_errors HPXInternal::hpx_execution HPXInternal::hpx_execution_base HPXInternal::hpx_executors HPXInternal::hpx_filesystem HPXInternal::hpx_format HPXInternal::hpx_functional HPXInternal::hpx_futures HPXInternal::hpx_hardware HPXInternal::hpx_hashing HPXInternal::hpx_include_local HPXInternal::hpx_ini HPXInternal::hpx_init_runtime_local HPXInternal::hpx_io_service HPXInternal::hpx_iterator_support HPXInternal::hpx_itt_notify HPXInternal::hpx_lcos_local HPXInternal::hpx_lock_registration HPXInternal::hpx_logging HPXInternal::hpx_memory HPXInternal::hpx_pack_traversal HPXInternal::hpx_plugin HPXInternal::hpx_prefix HPXInternal::hpx_preprocessor HPXInternal::hpx_program_options HPXInternal::hpx_properties HPXInternal::hpx_resiliency HPXInternal::hpx_resource_partitioner HPXInternal::hpx_runtime_configuration HPXInternal::hpx_runtime_local HPXInternal::hpx_schedulers HPXInternal::hpx_serialization HPXInternal::hpx_static_reinit HPXInternal::hpx_string_util HPXInternal::hpx_synchronization HPXInternal::hpx_tag_invoke HPXInternal::hpx_testing HPXInternal::hpx_thread_pool_util HPXInternal::hpx_thread_pools HPXInternal::hpx_thread_support HPXInternal::hpx_threading HPXInternal::hpx_threading_base HPXInternal::hpx_threadmanager HPXInternal::hpx_timed_execution HPXInternal::hpx_timing HPXInternal::hpx_topology HPXInternal::hpx_type_support HPXInternal::hpx_util HPXInternal::hpx_version HPXInternal::hpx_actions HPXInternal::hpx_actions_base HPXInternal::hpx_agas HPXInternal::hpx_agas_base HPXInternal::hpx_async_colocated HPXInternal::hpx_async_distributed HPXInternal::hpx_checkpoint HPXInternal::hpx_checkpoint_base HPXInternal::hpx_collectives HPXInternal::hpx_command_line_handling HPXInternal::hpx_components HPXInternal::hpx_components_base HPXInternal::hpx_compute HPXInternal::hpx_distribution_policies HPXInternal::hpx_executors_distributed HPXInternal::hpx_include HPXInternal::hpx_init_runtime HPXInternal::hpx_lcos_distributed HPXInternal::hpx_naming HPXInternal::hpx_naming_base HPXInternal::hpx_parcelport_tcp HPXInternal::hpx_parcelset HPXInternal::hpx_parcelset_base HPXInternal::hpx_performance_counters HPXInternal::hpx_plugin_factories HPXInternal::hpx_resiliency_distributed HPXInternal::hpx_runtime_components HPXInternal::hpx_runtime_distributed HPXInternal::hpx_segmented_algorithms HPXInternal::hpx_statistics HPXInternal::hpx_init HPXInternal::hpx_wrap HPXInternal::hpx_base_libraries)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target HPXInternal::hpx_private_flags
add_library(HPXInternal::hpx_private_flags INTERFACE IMPORTED)

set_target_properties(HPXInternal::hpx_private_flags PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<CONFIG:MinSizeRel>:NDEBUG>;\$<\$<CONFIG:Release>:NDEBUG>;\$<\$<CONFIG:RelWithDebInfo>:NDEBUG>"
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANGUAGE:CXX>:-Wall>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wextra>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wpedantic>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-strict-aliasing>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-sign-promo>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-attributes>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-cast-align>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-use-after-free>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-interference-size>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-noexcept-type>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wformat=2>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-format-nonliteral>;\$<\$<COMPILE_LANGUAGE:CXX>:-Winit-self>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wdouble-promotion>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wcast-qual>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wcast-align>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=trampolines>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=parentheses>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=reorder>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=return-type>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=sequence-point>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=uninitialized>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=format>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=missing-braces>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=sign-compare>;\$<\$<COMPILE_LANGUAGE:CXX>:-fdiagnostics-show-option>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=vla>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=return-type>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-unused-but-set-parameter>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-unused-but-set-variable>;\$<\$<COMPILE_LANGUAGE:CXX>:-Werror=uninitialized>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-unused-local-typedefs>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-maybe-uninitialized>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-sync-nand>;\$<\$<COMPILE_LANGUAGE:CXX>:-Wno-delete-non-virtual-dtor>;\$<\$<COMPILE_LANGUAGE:CXX>:-fvisibility=hidden>"
  INTERFACE_LINK_OPTIONS "\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:-Wl,-z,defs>;\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:-Wl,-z,defs>;\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:-fvisibility=hidden>;\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:-fvisibility=hidden>"
)

# Create imported target HPXInternal::hpx_public_flags
add_library(HPXInternal::hpx_public_flags INTERFACE IMPORTED)

set_target_properties(HPXInternal::hpx_public_flags PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANGUAGE:CXX>:-pthread>"
  INTERFACE_LINK_OPTIONS "-pthread"
)

# Create imported target HPXInternal::hpx_full
add_library(HPXInternal::hpx_full SHARED IMPORTED)

set_target_properties(HPXInternal::hpx_full PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_public_flags;HPXInternal::hpx_core;hpx_dependencies_boost;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_interface
add_library(HPXInternal::hpx_interface INTERFACE IMPORTED)

set_target_properties(HPXInternal::hpx_interface PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:HPX_APPLICATION_NAME_DEFAULT=\$<TARGET_PROPERTY:NAME>>;\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:HPX_PREFIX_DEFAULT=\"/work/chuanqiu/2Dsystem/my_NewMark/workhpx/installhpx\">;\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:HPX_APPLICATION_EXPORTS>;\$<\$<IN_LIST:\$<TARGET_PROPERTY:TYPE>,STATIC_LIBRARY;MODULE_LIBRARY;SHARED_LIBRARY;OBJECT_LIBRARY;INTERFACE_LIBRARY>:HPX_LIBRARY_EXPORTS>"
  INTERFACE_LINK_LIBRARIES "\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:HPXInternal::hpx_init>"
)

# Create imported target HPXInternal::hpx_interface_wrap_main
add_library(HPXInternal::hpx_interface_wrap_main INTERFACE IMPORTED)

set_target_properties(HPXInternal::hpx_interface_wrap_main PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<\$<STREQUAL:\$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:HPXInternal::hpx_wrap>"
)

# Create imported target HPXInternal::hpx_core
add_library(HPXInternal::hpx_core SHARED IMPORTED)

set_target_properties(HPXInternal::hpx_core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_public_flags;HPXInternal::hpx_base_libraries;hpx_dependencies_boost;hpx_dependencies_allocator;Hwloc::hwloc;Asio::asio"
)

# Create imported target HPXInternal::hpx_affinity
add_library(HPXInternal::hpx_affinity STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_affinity PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_topology;HPXInternal::hpx_util;Hwloc::hwloc;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_algorithms
add_library(HPXInternal::hpx_algorithms STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_algorithms PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_combinators;HPXInternal::hpx_async_local;HPXInternal::hpx_config;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_futures;HPXInternal::hpx_lcos_local;HPXInternal::hpx_pack_traversal;HPXInternal::hpx_serialization;HPXInternal::hpx_util;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_allocator_support
add_library(HPXInternal::hpx_allocator_support STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_allocator_support PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_preprocessor;HPXInternal::hpx_type_support;hpx_dependencies_allocator;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_asio
add_library(HPXInternal::hpx_asio STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_asio PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_functional;Asio::asio;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_assertion
add_library(HPXInternal::hpx_assertion STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_assertion PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_preprocessor;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_async_base
add_library(HPXInternal::hpx_async_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_async_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_allocator_support;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_coroutines;HPXInternal::hpx_tag_invoke;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_async_combinators
add_library(HPXInternal::hpx_async_combinators STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_async_combinators PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_base;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_futures;HPXInternal::hpx_memory;HPXInternal::hpx_pack_traversal;HPXInternal::hpx_tag_invoke;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_async_local
add_library(HPXInternal::hpx_async_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_async_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_base;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_batch_environments
add_library(HPXInternal::hpx_batch_environments STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_batch_environments PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_assertion;HPXInternal::hpx_format;HPXInternal::hpx_string_util;HPXInternal::hpx_errors;HPXInternal::hpx_asio;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_cache
add_library(HPXInternal::hpx_cache STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_cache PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_command_line_handling_local
add_library(HPXInternal::hpx_command_line_handling_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_command_line_handling_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_program_options;HPXInternal::hpx_runtime_configuration;HPXInternal::hpx_asio;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_filesystem;HPXInternal::hpx_format;HPXInternal::hpx_string_util;HPXInternal::hpx_topology;HPXInternal::hpx_util;HPXInternal::hpx_version;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_compute_local
add_library(HPXInternal::hpx_compute_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_compute_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_algorithms;HPXInternal::hpx_allocator_support;HPXInternal::hpx_async_combinators;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_functional;HPXInternal::hpx_futures;HPXInternal::hpx_iterator_support;HPXInternal::hpx_resource_partitioner;HPXInternal::hpx_runtime_local;HPXInternal::hpx_serialization;HPXInternal::hpx_threadmanager;HPXInternal::hpx_topology;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_concepts
add_library(HPXInternal::hpx_concepts STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_concepts PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_preprocessor;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_concurrency
add_library(HPXInternal::hpx_concurrency STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_concurrency PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_allocator_support;HPXInternal::hpx_assertion;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_execution_base;HPXInternal::hpx_errors;HPXInternal::hpx_hashing;HPXInternal::hpx_itt_notify;HPXInternal::hpx_lock_registration;HPXInternal::hpx_thread_support;HPXInternal::hpx_type_support;HPXInternal::hpx_version;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_config
add_library(HPXInternal::hpx_config STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_config PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_preprocessor;hpx_dependencies_boost;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_config_registry
add_library(HPXInternal::hpx_config_registry STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_config_registry PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_coroutines
add_library(HPXInternal::hpx_coroutines STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_coroutines PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_memory;HPXInternal::hpx_thread_support;HPXInternal::hpx_type_support;HPXInternal::hpx_util;HPXInternal::hpx_version;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_datastructures
add_library(HPXInternal::hpx_datastructures STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_datastructures PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_concepts;HPXInternal::hpx_errors;HPXInternal::hpx_serialization;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_debugging
add_library(HPXInternal::hpx_debugging STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_debugging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;Asio::asio;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_errors
add_library(HPXInternal::hpx_errors STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_errors PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_filesystem;HPXInternal::hpx_format;HPXInternal::hpx_logging;HPXInternal::hpx_preprocessor;HPXInternal::hpx_thread_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_execution
add_library(HPXInternal::hpx_execution STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_execution PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_base;HPXInternal::hpx_async_combinators;HPXInternal::hpx_config;HPXInternal::hpx_threading;HPXInternal::hpx_pack_traversal;HPXInternal::hpx_errors;HPXInternal::hpx_lock_registration;HPXInternal::hpx_memory;HPXInternal::hpx_synchronization;HPXInternal::hpx_thread_support;HPXInternal::hpx_timing;HPXInternal::hpx_topology;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_execution_base
add_library(HPXInternal::hpx_execution_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_execution_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_iterator_support;HPXInternal::hpx_lock_registration;HPXInternal::hpx_timing;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_executors
add_library(HPXInternal::hpx_executors STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_executors PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_allocator_support;HPXInternal::hpx_async_base;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_execution;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_futures;HPXInternal::hpx_hardware;HPXInternal::hpx_io_service;HPXInternal::hpx_itt_notify;HPXInternal::hpx_memory;HPXInternal::hpx_properties;HPXInternal::hpx_resource_partitioner;HPXInternal::hpx_threading;HPXInternal::hpx_topology;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_filesystem
add_library(HPXInternal::hpx_filesystem STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_filesystem PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_format
add_library(HPXInternal::hpx_format STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_format PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_functional
add_library(HPXInternal::hpx_functional STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_functional PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_itt_notify;HPXInternal::hpx_serialization;HPXInternal::hpx_tag_invoke;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_futures
add_library(HPXInternal::hpx_futures STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_futures PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_allocator_support;HPXInternal::hpx_assertion;HPXInternal::hpx_async_base;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_functional;HPXInternal::hpx_memory;HPXInternal::hpx_serialization;HPXInternal::hpx_synchronization;HPXInternal::hpx_timing;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_hardware
add_library(HPXInternal::hpx_hardware STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_hardware PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_hashing
add_library(HPXInternal::hpx_hashing STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_hashing PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_serialization;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_include_local
add_library(HPXInternal::hpx_include_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_include_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_algorithms;HPXInternal::hpx_async_base;HPXInternal::hpx_async_combinators;HPXInternal::hpx_async_local;HPXInternal::hpx_compute_local;HPXInternal::hpx_errors;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_futures;HPXInternal::hpx_lcos_local;HPXInternal::hpx_runtime_local;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_ini
add_library(HPXInternal::hpx_ini STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_ini PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_serialization;HPXInternal::hpx_string_util;HPXInternal::hpx_thread_support;HPXInternal::hpx_concurrency;HPXInternal::hpx_functional;HPXInternal::hpx_util;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_init_runtime_local
add_library(HPXInternal::hpx_init_runtime_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_init_runtime_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_algorithms;HPXInternal::hpx_command_line_handling_local;HPXInternal::hpx_program_options;HPXInternal::hpx_runtime_local;HPXInternal::hpx_errors;HPXInternal::hpx_filesystem;HPXInternal::hpx_format;HPXInternal::hpx_lock_registration;HPXInternal::hpx_logging;HPXInternal::hpx_schedulers;HPXInternal::hpx_testing;HPXInternal::hpx_threading_base;HPXInternal::hpx_timing;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_io_service
add_library(HPXInternal::hpx_io_service STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_io_service PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_concurrency;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_functional;HPXInternal::hpx_logging;HPXInternal::hpx_threading_base;HPXInternal::hpx_timing;Asio::asio;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_iterator_support
add_library(HPXInternal::hpx_iterator_support STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_iterator_support PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_functional;HPXInternal::hpx_serialization;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_itt_notify
add_library(HPXInternal::hpx_itt_notify STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_itt_notify PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_lcos_local
add_library(HPXInternal::hpx_lcos_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_lcos_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_futures;HPXInternal::hpx_lock_registration;HPXInternal::hpx_pack_traversal;HPXInternal::hpx_errors;HPXInternal::hpx_memory;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_lock_registration
add_library(HPXInternal::hpx_lock_registration STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_lock_registration PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_functional;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_logging
add_library(HPXInternal::hpx_logging STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_logging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_format;HPXInternal::hpx_filesystem;HPXInternal::hpx_format;HPXInternal::hpx_preprocessor;HPXInternal::hpx_timing;HPXInternal::hpx_thread_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_memory
add_library(HPXInternal::hpx_memory STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_memory PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_assertion;HPXInternal::hpx_serialization;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_pack_traversal
add_library(HPXInternal::hpx_pack_traversal STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_pack_traversal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_futures;HPXInternal::hpx_memory;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_plugin
add_library(HPXInternal::hpx_plugin STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_plugin PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_datastructures;HPXInternal::hpx_filesystem;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_prefix
add_library(HPXInternal::hpx_prefix STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_prefix PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_filesystem;HPXInternal::hpx_plugin;HPXInternal::hpx_string_util;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_preprocessor
add_library(HPXInternal::hpx_preprocessor STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_preprocessor PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_program_options
add_library(HPXInternal::hpx_program_options STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_program_options PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_datastructures;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_iterator_support;HPXInternal::hpx_string_util;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_properties
add_library(HPXInternal::hpx_properties STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_properties PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_tag_invoke;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_resiliency
add_library(HPXInternal::hpx_resiliency STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_resiliency PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_local;HPXInternal::hpx_execution;HPXInternal::hpx_futures;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_resource_partitioner
add_library(HPXInternal::hpx_resource_partitioner STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_resource_partitioner PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_affinity;HPXInternal::hpx_config;HPXInternal::hpx_runtime_configuration;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_ini;HPXInternal::hpx_prefix;HPXInternal::hpx_threading_base;HPXInternal::hpx_synchronization;HPXInternal::hpx_thread_pools;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_runtime_configuration
add_library(HPXInternal::hpx_runtime_configuration STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_runtime_configuration PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_program_options;HPXInternal::hpx_errors;HPXInternal::hpx_filesystem;HPXInternal::hpx_itt_notify;HPXInternal::hpx_logging;HPXInternal::hpx_plugin;HPXInternal::hpx_ini;HPXInternal::hpx_prefix;HPXInternal::hpx_coroutines;HPXInternal::hpx_version;HPXInternal::hpx_string_util;HPXInternal::hpx_synchronization;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_runtime_local
add_library(HPXInternal::hpx_runtime_local STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_runtime_local PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_command_line_handling_local;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_execution;HPXInternal::hpx_format;HPXInternal::hpx_futures;HPXInternal::hpx_io_service;HPXInternal::hpx_logging;HPXInternal::hpx_plugin;HPXInternal::hpx_program_options;HPXInternal::hpx_resource_partitioner;HPXInternal::hpx_runtime_configuration;HPXInternal::hpx_static_reinit;HPXInternal::hpx_threading;HPXInternal::hpx_threading_base;HPXInternal::hpx_threadmanager;HPXInternal::hpx_timing;HPXInternal::hpx_topology;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_schedulers
add_library(HPXInternal::hpx_schedulers STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_schedulers PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_affinity;HPXInternal::hpx_concurrency;HPXInternal::hpx_config;HPXInternal::hpx_assertion;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_logging;HPXInternal::hpx_synchronization;HPXInternal::hpx_threading_base;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_serialization
add_library(HPXInternal::hpx_serialization STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_serialization PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_preprocessor;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_static_reinit
add_library(HPXInternal::hpx_static_reinit STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_static_reinit PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_assertion;HPXInternal::hpx_concurrency;HPXInternal::hpx_functional;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_string_util
add_library(HPXInternal::hpx_string_util STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_string_util PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_errors;HPXInternal::hpx_iterator_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_synchronization
add_library(HPXInternal::hpx_synchronization STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_synchronization PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_assertion;HPXInternal::hpx_execution_base;HPXInternal::hpx_concurrency;HPXInternal::hpx_coroutines;HPXInternal::hpx_errors;HPXInternal::hpx_functional;HPXInternal::hpx_hashing;HPXInternal::hpx_itt_notify;HPXInternal::hpx_memory;HPXInternal::hpx_lock_registration;HPXInternal::hpx_logging;HPXInternal::hpx_memory;HPXInternal::hpx_threading_base;HPXInternal::hpx_thread_support;HPXInternal::hpx_topology;HPXInternal::hpx_timing;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_tag_invoke
add_library(HPXInternal::hpx_tag_invoke STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_tag_invoke PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_testing
add_library(HPXInternal::hpx_testing STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_testing PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_preprocessor;HPXInternal::hpx_util;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_thread_pool_util
add_library(HPXInternal::hpx_thread_pool_util STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_thread_pool_util PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_local;HPXInternal::hpx_futures;HPXInternal::hpx_functional;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_thread_pools
add_library(HPXInternal::hpx_thread_pools STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_thread_pools PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_itt_notify;HPXInternal::hpx_logging;HPXInternal::hpx_schedulers;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_thread_support
add_library(HPXInternal::hpx_thread_support STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_thread_support PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_config;HPXInternal::hpx_concepts;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_threading
add_library(HPXInternal::hpx_threading STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_threading PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_errors;HPXInternal::hpx_futures;HPXInternal::hpx_lock_registration;HPXInternal::hpx_memory;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_threading_base
add_library(HPXInternal::hpx_threading_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_threading_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_affinity;HPXInternal::hpx_allocator_support;HPXInternal::hpx_assertion;HPXInternal::hpx_execution_base;HPXInternal::hpx_config;HPXInternal::hpx_concurrency;HPXInternal::hpx_coroutines;HPXInternal::hpx_debugging;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_functional;HPXInternal::hpx_hardware;HPXInternal::hpx_itt_notify;HPXInternal::hpx_lock_registration;HPXInternal::hpx_logging;HPXInternal::hpx_memory;HPXInternal::hpx_timing;HPXInternal::hpx_type_support;Asio::asio;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_threadmanager
add_library(HPXInternal::hpx_threadmanager STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_threadmanager PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_program_options;HPXInternal::hpx_resource_partitioner;HPXInternal::hpx_runtime_configuration;HPXInternal::hpx_errors;HPXInternal::hpx_logging;HPXInternal::hpx_schedulers;HPXInternal::hpx_async_combinators;HPXInternal::hpx_thread_pools;HPXInternal::hpx_io_service;HPXInternal::hpx_thread_pool_util;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_timed_execution
add_library(HPXInternal::hpx_timed_execution STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_timed_execution PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_concepts;HPXInternal::hpx_execution;HPXInternal::hpx_executors;HPXInternal::hpx_threading;HPXInternal::hpx_timing;HPXInternal::hpx_topology;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_timing
add_library(HPXInternal::hpx_timing STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_timing PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_hardware;HPXInternal::hpx_type_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_topology
add_library(HPXInternal::hpx_topology STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_topology PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_async_base;HPXInternal::hpx_config;HPXInternal::hpx_concurrency;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_logging;HPXInternal::hpx_type_support;HPXInternal::hpx_util;Hwloc::hwloc;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_type_support
add_library(HPXInternal::hpx_type_support STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_type_support PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_assertion;HPXInternal::hpx_concepts;HPXInternal::hpx_config;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_util
add_library(HPXInternal::hpx_util STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_util PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_concepts;HPXInternal::hpx_errors;HPXInternal::hpx_format;HPXInternal::hpx_iterator_support;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_version
add_library(HPXInternal::hpx_version STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_version PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_config;HPXInternal::hpx_config_registry;HPXInternal::hpx_format;HPXInternal::hpx_prefix;HPXInternal::hpx_config;HPXInternal::hpx_format;HPXInternal::hpx_prefix;Hwloc::hwloc;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries;HPXInternal::hpx_config_registry"
)

# Create imported target HPXInternal::hpx_actions
add_library(HPXInternal::hpx_actions STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_actions PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_actions_base
add_library(HPXInternal::hpx_actions_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_actions_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_agas
add_library(HPXInternal::hpx_agas STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_agas PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_agas_base;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components_base;HPXInternal::hpx_naming;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_agas_base
add_library(HPXInternal::hpx_agas_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_agas_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components_base;HPXInternal::hpx_naming;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_async_colocated
add_library(HPXInternal::hpx_async_colocated STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_async_colocated PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_agas_base;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_async_distributed
add_library(HPXInternal::hpx_async_distributed STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_async_distributed PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_naming;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_checkpoint
add_library(HPXInternal::hpx_checkpoint STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_checkpoint PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_distributed;HPXInternal::hpx_checkpoint_base;HPXInternal::hpx_naming;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_checkpoint_base
add_library(HPXInternal::hpx_checkpoint_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_checkpoint_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_collectives
add_library(HPXInternal::hpx_collectives STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_collectives PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_runtime_distributed;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_command_line_handling
add_library(HPXInternal::hpx_command_line_handling STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_command_line_handling PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_components
add_library(HPXInternal::hpx_components STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_components PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_components_base
add_library(HPXInternal::hpx_components_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_components_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_compute
add_library(HPXInternal::hpx_compute STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_compute PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_naming;HPXInternal::hpx_performance_counters;HPXInternal::hpx_async_distributed;HPXInternal::hpx_runtime_components;HPXInternal::hpx_runtime_distributed;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_distribution_policies
add_library(HPXInternal::hpx_distribution_policies STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_distribution_policies PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_async_colocated;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_performance_counters;HPXInternal::hpx_runtime_components;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_executors_distributed
add_library(HPXInternal::hpx_executors_distributed STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_executors_distributed PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_distributed;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_include
add_library(HPXInternal::hpx_include STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_include PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_command_line_handling;HPXInternal::hpx_compute;HPXInternal::hpx_agas;HPXInternal::hpx_async_distributed;HPXInternal::hpx_runtime_components;HPXInternal::hpx_runtime_distributed;HPXInternal::hpx_lcos_distributed;HPXInternal::hpx_performance_counters;HPXInternal::hpx_segmented_algorithms;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_init_runtime
add_library(HPXInternal::hpx_init_runtime STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_init_runtime PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_command_line_handling;HPXInternal::hpx_async_distributed;HPXInternal::hpx_collectives;HPXInternal::hpx_naming;HPXInternal::hpx_performance_counters;HPXInternal::hpx_runtime_distributed;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_lcos_distributed
add_library(HPXInternal::hpx_lcos_distributed STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_lcos_distributed PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_async_distributed;HPXInternal::hpx_naming;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_naming
add_library(HPXInternal::hpx_naming STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_naming PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_checkpoint_base;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_naming_base
add_library(HPXInternal::hpx_naming_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_naming_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_parcelport_tcp
add_library(HPXInternal::hpx_parcelport_tcp STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_parcelport_tcp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_command_line_handling;HPXInternal::hpx_parcelset;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_parcelset
add_library(HPXInternal::hpx_parcelset STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_parcelset PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_parcelset_base;HPXInternal::hpx_plugin_factories;HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_components_base;HPXInternal::hpx_naming;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_parcelset_base
add_library(HPXInternal::hpx_parcelset_base STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_parcelset_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_performance_counters
add_library(HPXInternal::hpx_performance_counters STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_performance_counters PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_agas;HPXInternal::hpx_agas_base;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_naming;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset;HPXInternal::hpx_runtime_components;HPXInternal::hpx_statistics;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_plugin_factories
add_library(HPXInternal::hpx_plugin_factories STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_plugin_factories PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_command_line_handling;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_resiliency_distributed
add_library(HPXInternal::hpx_resiliency_distributed STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_resiliency_distributed PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions_base;HPXInternal::hpx_naming;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_runtime_components
add_library(HPXInternal::hpx_runtime_components STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_runtime_components PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_agas;HPXInternal::hpx_async_colocated;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_naming_base;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_runtime_distributed
add_library(HPXInternal::hpx_runtime_distributed STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_runtime_distributed PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_actions;HPXInternal::hpx_actions_base;HPXInternal::hpx_agas;HPXInternal::hpx_agas_base;HPXInternal::hpx_async_colocated;HPXInternal::hpx_async_distributed;HPXInternal::hpx_components;HPXInternal::hpx_components_base;HPXInternal::hpx_command_line_handling;HPXInternal::hpx_distribution_policies;HPXInternal::hpx_naming_base;HPXInternal::hpx_parcelset;HPXInternal::hpx_parcelset_base;HPXInternal::hpx_performance_counters;HPXInternal::hpx_plugin_factories;HPXInternal::hpx_runtime_components;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_segmented_algorithms
add_library(HPXInternal::hpx_segmented_algorithms STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_segmented_algorithms PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_async_colocated;HPXInternal::hpx_async_distributed;HPXInternal::hpx_distribution_policies;HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_statistics
add_library(HPXInternal::hpx_statistics STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_statistics PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "HPXInternal::hpx_core;HPXInternal::hpx_public_flags;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;HPXInternal::hpx_base_libraries"
)

# Create imported target HPXInternal::hpx_init
add_library(HPXInternal::hpx_init STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_init PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:HPXInternal::hpx_full>;\$<LINK_ONLY:HPXInternal::hpx_private_flags>"
)

# Create imported target HPXInternal::hpx_wrap
add_library(HPXInternal::hpx_wrap STATIC IMPORTED)

set_target_properties(HPXInternal::hpx_wrap PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:HPXInternal::hpx_full>;\$<LINK_ONLY:HPXInternal::hpx_init>;\$<LINK_ONLY:HPXInternal::hpx_private_flags>;-Wl,-wrap=main"
)

# Create imported target HPXInternal::hpx_base_libraries
add_library(HPXInternal::hpx_base_libraries INTERFACE IMPORTED)

set_target_properties(HPXInternal::hpx_base_libraries PROPERTIES
  INTERFACE_LINK_LIBRARIES "atomic;dl;rt;Threads::Threads"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/HPXInternalTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "Asio::asio" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
